// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.1
// source: trade.proto

package api

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryTradeOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderIdList    []int64  `protobuf:"varint,1,rep,packed,name=order_id_list,json=orderIdList,proto3" json:"order_id_list,omitempty"`
	BizOrderNoList []string `protobuf:"bytes,2,rep,name=biz_order_no_list,json=bizOrderNoList,proto3" json:"biz_order_no_list,omitempty"`
}

func (x *QueryTradeOrderRequest) Reset() {
	*x = QueryTradeOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTradeOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTradeOrderRequest) ProtoMessage() {}

func (x *QueryTradeOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTradeOrderRequest.ProtoReflect.Descriptor instead.
func (*QueryTradeOrderRequest) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{0}
}

func (x *QueryTradeOrderRequest) GetOrderIdList() []int64 {
	if x != nil {
		return x.OrderIdList
	}
	return nil
}

func (x *QueryTradeOrderRequest) GetBizOrderNoList() []string {
	if x != nil {
		return x.BizOrderNoList
	}
	return nil
}

type QueryTradeOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta           *Metadata     `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	TradeOrderList []*TradeOrder `protobuf:"bytes,2,rep,name=trade_order_list,json=tradeOrderList,proto3" json:"trade_order_list,omitempty"`
}

func (x *QueryTradeOrderResponse) Reset() {
	*x = QueryTradeOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTradeOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTradeOrderResponse) ProtoMessage() {}

func (x *QueryTradeOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTradeOrderResponse.ProtoReflect.Descriptor instead.
func (*QueryTradeOrderResponse) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{1}
}

func (x *QueryTradeOrderResponse) GetMeta() *Metadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *QueryTradeOrderResponse) GetTradeOrderList() []*TradeOrder {
	if x != nil {
		return x.TradeOrderList
	}
	return nil
}

type TradeCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BizType       TradeBizType          `protobuf:"varint,1,opt,name=biz_type,json=bizType,proto3,enum=api.TradeBizType" json:"biz_type,omitempty"`
	SaleWay       TradeSaleWay          `protobuf:"varint,2,opt,name=sale_way,json=saleWay,proto3,enum=api.TradeSaleWay" json:"sale_way,omitempty"`
	PaySequence   TradePaySequence      `protobuf:"varint,3,opt,name=pay_sequence,json=paySequence,proto3,enum=api.TradePaySequence" json:"pay_sequence,omitempty"`
	GoodsType     TradeGoodsType        `protobuf:"varint,4,opt,name=goods_type,json=goodsType,proto3,enum=api.TradeGoodsType" json:"goods_type,omitempty"`
	BizStatus     int64                 `protobuf:"varint,5,opt,name=biz_status,json=bizStatus,proto3" json:"biz_status,omitempty"`
	BizOrderNo    string                `protobuf:"bytes,6,opt,name=biz_order_no,json=bizOrderNo,proto3" json:"biz_order_no,omitempty"`
	BizId         int64                 `protobuf:"varint,7,opt,name=biz_id,json=bizId,proto3" json:"biz_id,omitempty"`
	Buyer         *TradeParticipant     `protobuf:"bytes,8,opt,name=buyer,proto3" json:"buyer,omitempty"`
	Seller        *TradeParticipant     `protobuf:"bytes,9,opt,name=seller,proto3" json:"seller,omitempty"`
	PayType       PayType               `protobuf:"varint,10,opt,name=pay_type,json=payType,proto3,enum=api.PayType" json:"pay_type,omitempty"`
	PayableAmount uint64                `protobuf:"varint,11,opt,name=payable_amount,json=payableAmount,proto3" json:"payable_amount,omitempty"`
	Promotions    []int64               `protobuf:"varint,12,rep,packed,name=promotions,proto3" json:"promotions,omitempty"`
	DeliveryInfo  *DeliveryInfo         `protobuf:"bytes,13,opt,name=delivery_info,json=deliveryInfo,proto3" json:"delivery_info,omitempty"`
	DeliveryTime  int64                 `protobuf:"varint,14,opt,name=delivery_time,json=deliveryTime,proto3" json:"delivery_time,omitempty"`
	TimeoutInfo   *TimeoutInfo          `protobuf:"bytes,15,opt,name=timeout_info,json=timeoutInfo,proto3" json:"timeout_info,omitempty"`
	SubOrderList  []*TradeCreateRequest `protobuf:"bytes,16,rep,name=sub_order_list,json=subOrderList,proto3" json:"sub_order_list,omitempty"`
	Extra         map[string]string     `protobuf:"bytes,17,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TradeCreateRequest) Reset() {
	*x = TradeCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeCreateRequest) ProtoMessage() {}

func (x *TradeCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeCreateRequest.ProtoReflect.Descriptor instead.
func (*TradeCreateRequest) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{2}
}

func (x *TradeCreateRequest) GetBizType() TradeBizType {
	if x != nil {
		return x.BizType
	}
	return TradeBizType_DEFAULT_BT
}

func (x *TradeCreateRequest) GetSaleWay() TradeSaleWay {
	if x != nil {
		return x.SaleWay
	}
	return TradeSaleWay_DEFAULT_SW
}

func (x *TradeCreateRequest) GetPaySequence() TradePaySequence {
	if x != nil {
		return x.PaySequence
	}
	return TradePaySequence_PAY_FIRST
}

func (x *TradeCreateRequest) GetGoodsType() TradeGoodsType {
	if x != nil {
		return x.GoodsType
	}
	return TradeGoodsType_DEFAULT_GT
}

func (x *TradeCreateRequest) GetBizStatus() int64 {
	if x != nil {
		return x.BizStatus
	}
	return 0
}

func (x *TradeCreateRequest) GetBizOrderNo() string {
	if x != nil {
		return x.BizOrderNo
	}
	return ""
}

func (x *TradeCreateRequest) GetBizId() int64 {
	if x != nil {
		return x.BizId
	}
	return 0
}

func (x *TradeCreateRequest) GetBuyer() *TradeParticipant {
	if x != nil {
		return x.Buyer
	}
	return nil
}

func (x *TradeCreateRequest) GetSeller() *TradeParticipant {
	if x != nil {
		return x.Seller
	}
	return nil
}

func (x *TradeCreateRequest) GetPayType() PayType {
	if x != nil {
		return x.PayType
	}
	return PayType_INTERNAL
}

func (x *TradeCreateRequest) GetPayableAmount() uint64 {
	if x != nil {
		return x.PayableAmount
	}
	return 0
}

func (x *TradeCreateRequest) GetPromotions() []int64 {
	if x != nil {
		return x.Promotions
	}
	return nil
}

func (x *TradeCreateRequest) GetDeliveryInfo() *DeliveryInfo {
	if x != nil {
		return x.DeliveryInfo
	}
	return nil
}

func (x *TradeCreateRequest) GetDeliveryTime() int64 {
	if x != nil {
		return x.DeliveryTime
	}
	return 0
}

func (x *TradeCreateRequest) GetTimeoutInfo() *TimeoutInfo {
	if x != nil {
		return x.TimeoutInfo
	}
	return nil
}

func (x *TradeCreateRequest) GetSubOrderList() []*TradeCreateRequest {
	if x != nil {
		return x.SubOrderList
	}
	return nil
}

func (x *TradeCreateRequest) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type TradeCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta       *Metadata   `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	TradeOrder *TradeOrder `protobuf:"bytes,2,opt,name=trade_order,json=tradeOrder,proto3" json:"trade_order,omitempty"`
}

func (x *TradeCreateResponse) Reset() {
	*x = TradeCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TradeCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TradeCreateResponse) ProtoMessage() {}

func (x *TradeCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TradeCreateResponse.ProtoReflect.Descriptor instead.
func (*TradeCreateResponse) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{3}
}

func (x *TradeCreateResponse) GetMeta() *Metadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *TradeCreateResponse) GetTradeOrder() *TradeOrder {
	if x != nil {
		return x.TradeOrder
	}
	return nil
}

type MergeTradeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalOrderId int64   `protobuf:"varint,1,opt,name=original_order_id,json=originalOrderId,proto3" json:"original_order_id,omitempty"`
	OrderIdList     []int64 `protobuf:"varint,2,rep,packed,name=order_id_list,json=orderIdList,proto3" json:"order_id_list,omitempty"`
}

func (x *MergeTradeRequest) Reset() {
	*x = MergeTradeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeTradeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeTradeRequest) ProtoMessage() {}

func (x *MergeTradeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeTradeRequest.ProtoReflect.Descriptor instead.
func (*MergeTradeRequest) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{4}
}

func (x *MergeTradeRequest) GetOriginalOrderId() int64 {
	if x != nil {
		return x.OriginalOrderId
	}
	return 0
}

func (x *MergeTradeRequest) GetOrderIdList() []int64 {
	if x != nil {
		return x.OrderIdList
	}
	return nil
}

type MergeTradeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta       *Metadata   `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	TradeOrder *TradeOrder `protobuf:"bytes,2,opt,name=trade_order,json=tradeOrder,proto3" json:"trade_order,omitempty"`
}

func (x *MergeTradeResponse) Reset() {
	*x = MergeTradeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MergeTradeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeTradeResponse) ProtoMessage() {}

func (x *MergeTradeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeTradeResponse.ProtoReflect.Descriptor instead.
func (*MergeTradeResponse) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{5}
}

func (x *MergeTradeResponse) GetMeta() *Metadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *MergeTradeResponse) GetTradeOrder() *TradeOrder {
	if x != nil {
		return x.TradeOrder
	}
	return nil
}

type UpdateExtendInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId int64             `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Extra   map[string]string `protobuf:"bytes,2,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UpdateExtendInfoRequest) Reset() {
	*x = UpdateExtendInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateExtendInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExtendInfoRequest) ProtoMessage() {}

func (x *UpdateExtendInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExtendInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateExtendInfoRequest) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateExtendInfoRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *UpdateExtendInfoRequest) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type UpdateExtendInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta       *Metadata   `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	TradeOrder *TradeOrder `protobuf:"bytes,2,opt,name=trade_order,json=tradeOrder,proto3" json:"trade_order,omitempty"`
}

func (x *UpdateExtendInfoResponse) Reset() {
	*x = UpdateExtendInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateExtendInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExtendInfoResponse) ProtoMessage() {}

func (x *UpdateExtendInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExtendInfoResponse.ProtoReflect.Descriptor instead.
func (*UpdateExtendInfoResponse) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateExtendInfoResponse) GetMeta() *Metadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *UpdateExtendInfoResponse) GetTradeOrder() *TradeOrder {
	if x != nil {
		return x.TradeOrder
	}
	return nil
}

type UpdateTradeOrderStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId     int64                `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	OrderStatus TradeOrderStatusEnum `protobuf:"varint,2,opt,name=order_status,json=orderStatus,proto3,enum=api.TradeOrderStatusEnum" json:"order_status,omitempty"`
	CloseType   CloseType            `protobuf:"varint,3,opt,name=close_type,json=closeType,proto3,enum=api.CloseType" json:"close_type,omitempty"`
	CloseReason string               `protobuf:"bytes,4,opt,name=close_reason,json=closeReason,proto3" json:"close_reason,omitempty"`
}

func (x *UpdateTradeOrderStatusRequest) Reset() {
	*x = UpdateTradeOrderStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTradeOrderStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTradeOrderStatusRequest) ProtoMessage() {}

func (x *UpdateTradeOrderStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTradeOrderStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateTradeOrderStatusRequest) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTradeOrderStatusRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *UpdateTradeOrderStatusRequest) GetOrderStatus() TradeOrderStatusEnum {
	if x != nil {
		return x.OrderStatus
	}
	return TradeOrderStatusEnum_CREATE
}

func (x *UpdateTradeOrderStatusRequest) GetCloseType() CloseType {
	if x != nil {
		return x.CloseType
	}
	return CloseType_UNDEFINED_CT
}

func (x *UpdateTradeOrderStatusRequest) GetCloseReason() string {
	if x != nil {
		return x.CloseReason
	}
	return ""
}

type UpdateTradeOrderStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta       *Metadata   `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	TradeOrder *TradeOrder `protobuf:"bytes,2,opt,name=trade_order,json=tradeOrder,proto3" json:"trade_order,omitempty"`
}

func (x *UpdateTradeOrderStatusResponse) Reset() {
	*x = UpdateTradeOrderStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTradeOrderStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTradeOrderStatusResponse) ProtoMessage() {}

func (x *UpdateTradeOrderStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTradeOrderStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateTradeOrderStatusResponse) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateTradeOrderStatusResponse) GetMeta() *Metadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *UpdateTradeOrderStatusResponse) GetTradeOrder() *TradeOrder {
	if x != nil {
		return x.TradeOrder
	}
	return nil
}

type UpdateDeliveryInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId      int64         `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	DeliveryInfo *DeliveryInfo `protobuf:"bytes,2,opt,name=delivery_info,json=deliveryInfo,proto3" json:"delivery_info,omitempty"`
}

func (x *UpdateDeliveryInfoRequest) Reset() {
	*x = UpdateDeliveryInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeliveryInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeliveryInfoRequest) ProtoMessage() {}

func (x *UpdateDeliveryInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeliveryInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeliveryInfoRequest) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateDeliveryInfoRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *UpdateDeliveryInfoRequest) GetDeliveryInfo() *DeliveryInfo {
	if x != nil {
		return x.DeliveryInfo
	}
	return nil
}

type UpdateDeliveryInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta       *Metadata   `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	TradeOrder *TradeOrder `protobuf:"bytes,2,opt,name=trade_order,json=tradeOrder,proto3" json:"trade_order,omitempty"`
}

func (x *UpdateDeliveryInfoResponse) Reset() {
	*x = UpdateDeliveryInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeliveryInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeliveryInfoResponse) ProtoMessage() {}

func (x *UpdateDeliveryInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeliveryInfoResponse.ProtoReflect.Descriptor instead.
func (*UpdateDeliveryInfoResponse) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateDeliveryInfoResponse) GetMeta() *Metadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *UpdateDeliveryInfoResponse) GetTradeOrder() *TradeOrder {
	if x != nil {
		return x.TradeOrder
	}
	return nil
}

type AddSubOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId  int64                 `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	SubOrder []*TradeCreateRequest `protobuf:"bytes,2,rep,name=sub_order,json=subOrder,proto3" json:"sub_order,omitempty"`
}

func (x *AddSubOrderRequest) Reset() {
	*x = AddSubOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSubOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSubOrderRequest) ProtoMessage() {}

func (x *AddSubOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSubOrderRequest.ProtoReflect.Descriptor instead.
func (*AddSubOrderRequest) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{12}
}

func (x *AddSubOrderRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *AddSubOrderRequest) GetSubOrder() []*TradeCreateRequest {
	if x != nil {
		return x.SubOrder
	}
	return nil
}

type AddSubOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta       *Metadata   `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	TradeOrder *TradeOrder `protobuf:"bytes,2,opt,name=trade_order,json=tradeOrder,proto3" json:"trade_order,omitempty"`
}

func (x *AddSubOrderResponse) Reset() {
	*x = AddSubOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trade_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddSubOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddSubOrderResponse) ProtoMessage() {}

func (x *AddSubOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trade_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddSubOrderResponse.ProtoReflect.Descriptor instead.
func (*AddSubOrderResponse) Descriptor() ([]byte, []int) {
	return file_trade_proto_rawDescGZIP(), []int{13}
}

func (x *AddSubOrderResponse) GetMeta() *Metadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *AddSubOrderResponse) GetTradeOrder() *TradeOrder {
	if x != nil {
		return x.TradeOrder
	}
	return nil
}

var File_trade_proto protoreflect.FileDescriptor

var file_trade_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61,
	0x70, 0x69, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x67, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x29, 0x0a, 0x11, 0x62, 0x69, 0x7a, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x69, 0x7a, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x77, 0x0a, 0x17, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0xc7, 0x06, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x62, 0x69,
	0x7a, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x42, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x07, 0x62, 0x69, 0x7a, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x73, 0x61, 0x6c, 0x65,
	0x5f, 0x77, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x61, 0x6c, 0x65, 0x57, 0x61, 0x79, 0x52, 0x07, 0x73,
	0x61, 0x6c, 0x65, 0x57, 0x61, 0x79, 0x12, 0x38, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x61, 0x79, 0x53, 0x65, 0x71, 0x75, 0x65,
	0x6e, 0x63, 0x65, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x12, 0x32, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69, 0x7a, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x69, 0x7a, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x69, 0x7a, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x6e, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x69, 0x7a, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x69, 0x7a, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x69, 0x7a, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x05,
	0x62, 0x75, 0x79, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61,
	0x6e, 0x74, 0x52, 0x05, 0x62, 0x75, 0x79, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74,
	0x52, 0x06, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x61, 0x62,
	0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x74,
	0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0e, 0x73, 0x75,
	0x62, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x10, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0c, 0x73, 0x75, 0x62,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x05, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x1a, 0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6a, 0x0a,
	0x13, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x63, 0x0a, 0x11, 0x4d, 0x65, 0x72,
	0x67, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a,
	0x0a, 0x11, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x69,
	0x0a, 0x12, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xad, 0x01, 0x0a, 0x17, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x3d, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a,
	0x38, 0x0a, 0x0a, 0x45, 0x78, 0x74, 0x72, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6f, 0x0a, 0x18, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0a,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xca, 0x01, 0x0a, 0x1d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x73,
	0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x75, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x0b,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x6e,
	0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x71,
	0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12,
	0x30, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x22, 0x65, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x53, 0x75, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x34, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08,
	0x73, 0x75, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x6a, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x53,
	0x75, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x21, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x12, 0x30, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x32, 0xaa, 0x04, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x64, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x4d, 0x65, 0x72, 0x67, 0x65, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x61, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x64,
	0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x53, 0x75, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x17,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x75, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x64,
	0x64, 0x53, 0x75, 0x62, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x7a, 0x65, 0x6e, 0x69, 0x74, 0x68, 0x2f, 0x44, 0x6f, 0x75, 0x54,
	0x6f, 0x6b, 0x2f, 0x2e, 0x2e, 0x2e, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_trade_proto_rawDescOnce sync.Once
	file_trade_proto_rawDescData = file_trade_proto_rawDesc
)

func file_trade_proto_rawDescGZIP() []byte {
	file_trade_proto_rawDescOnce.Do(func() {
		file_trade_proto_rawDescData = protoimpl.X.CompressGZIP(file_trade_proto_rawDescData)
	})
	return file_trade_proto_rawDescData
}

var file_trade_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_trade_proto_goTypes = []interface{}{
	(*QueryTradeOrderRequest)(nil),         // 0: api.QueryTradeOrderRequest
	(*QueryTradeOrderResponse)(nil),        // 1: api.QueryTradeOrderResponse
	(*TradeCreateRequest)(nil),             // 2: api.TradeCreateRequest
	(*TradeCreateResponse)(nil),            // 3: api.TradeCreateResponse
	(*MergeTradeRequest)(nil),              // 4: api.MergeTradeRequest
	(*MergeTradeResponse)(nil),             // 5: api.MergeTradeResponse
	(*UpdateExtendInfoRequest)(nil),        // 6: api.UpdateExtendInfoRequest
	(*UpdateExtendInfoResponse)(nil),       // 7: api.UpdateExtendInfoResponse
	(*UpdateTradeOrderStatusRequest)(nil),  // 8: api.UpdateTradeOrderStatusRequest
	(*UpdateTradeOrderStatusResponse)(nil), // 9: api.UpdateTradeOrderStatusResponse
	(*UpdateDeliveryInfoRequest)(nil),      // 10: api.UpdateDeliveryInfoRequest
	(*UpdateDeliveryInfoResponse)(nil),     // 11: api.UpdateDeliveryInfoResponse
	(*AddSubOrderRequest)(nil),             // 12: api.AddSubOrderRequest
	(*AddSubOrderResponse)(nil),            // 13: api.AddSubOrderResponse
	nil,                                    // 14: api.TradeCreateRequest.ExtraEntry
	nil,                                    // 15: api.UpdateExtendInfoRequest.ExtraEntry
	(*Metadata)(nil),                       // 16: api.Metadata
	(*TradeOrder)(nil),                     // 17: api.TradeOrder
	(TradeBizType)(0),                      // 18: api.TradeBizType
	(TradeSaleWay)(0),                      // 19: api.TradeSaleWay
	(TradePaySequence)(0),                  // 20: api.TradePaySequence
	(TradeGoodsType)(0),                    // 21: api.TradeGoodsType
	(*TradeParticipant)(nil),               // 22: api.TradeParticipant
	(PayType)(0),                           // 23: api.PayType
	(*DeliveryInfo)(nil),                   // 24: api.DeliveryInfo
	(*TimeoutInfo)(nil),                    // 25: api.TimeoutInfo
	(TradeOrderStatusEnum)(0),              // 26: api.TradeOrderStatusEnum
	(CloseType)(0),                         // 27: api.CloseType
}
var file_trade_proto_depIdxs = []int32{
	16, // 0: api.QueryTradeOrderResponse.meta:type_name -> api.Metadata
	17, // 1: api.QueryTradeOrderResponse.trade_order_list:type_name -> api.TradeOrder
	18, // 2: api.TradeCreateRequest.biz_type:type_name -> api.TradeBizType
	19, // 3: api.TradeCreateRequest.sale_way:type_name -> api.TradeSaleWay
	20, // 4: api.TradeCreateRequest.pay_sequence:type_name -> api.TradePaySequence
	21, // 5: api.TradeCreateRequest.goods_type:type_name -> api.TradeGoodsType
	22, // 6: api.TradeCreateRequest.buyer:type_name -> api.TradeParticipant
	22, // 7: api.TradeCreateRequest.seller:type_name -> api.TradeParticipant
	23, // 8: api.TradeCreateRequest.pay_type:type_name -> api.PayType
	24, // 9: api.TradeCreateRequest.delivery_info:type_name -> api.DeliveryInfo
	25, // 10: api.TradeCreateRequest.timeout_info:type_name -> api.TimeoutInfo
	2,  // 11: api.TradeCreateRequest.sub_order_list:type_name -> api.TradeCreateRequest
	14, // 12: api.TradeCreateRequest.extra:type_name -> api.TradeCreateRequest.ExtraEntry
	16, // 13: api.TradeCreateResponse.meta:type_name -> api.Metadata
	17, // 14: api.TradeCreateResponse.trade_order:type_name -> api.TradeOrder
	16, // 15: api.MergeTradeResponse.meta:type_name -> api.Metadata
	17, // 16: api.MergeTradeResponse.trade_order:type_name -> api.TradeOrder
	15, // 17: api.UpdateExtendInfoRequest.extra:type_name -> api.UpdateExtendInfoRequest.ExtraEntry
	16, // 18: api.UpdateExtendInfoResponse.meta:type_name -> api.Metadata
	17, // 19: api.UpdateExtendInfoResponse.trade_order:type_name -> api.TradeOrder
	26, // 20: api.UpdateTradeOrderStatusRequest.order_status:type_name -> api.TradeOrderStatusEnum
	27, // 21: api.UpdateTradeOrderStatusRequest.close_type:type_name -> api.CloseType
	16, // 22: api.UpdateTradeOrderStatusResponse.meta:type_name -> api.Metadata
	17, // 23: api.UpdateTradeOrderStatusResponse.trade_order:type_name -> api.TradeOrder
	24, // 24: api.UpdateDeliveryInfoRequest.delivery_info:type_name -> api.DeliveryInfo
	16, // 25: api.UpdateDeliveryInfoResponse.meta:type_name -> api.Metadata
	17, // 26: api.UpdateDeliveryInfoResponse.trade_order:type_name -> api.TradeOrder
	2,  // 27: api.AddSubOrderRequest.sub_order:type_name -> api.TradeCreateRequest
	16, // 28: api.AddSubOrderResponse.meta:type_name -> api.Metadata
	17, // 29: api.AddSubOrderResponse.trade_order:type_name -> api.TradeOrder
	0,  // 30: api.TradeService.QueryTradeOrder:input_type -> api.QueryTradeOrderRequest
	2,  // 31: api.TradeService.TradeCreate:input_type -> api.TradeCreateRequest
	4,  // 32: api.TradeService.MergeTrade:input_type -> api.MergeTradeRequest
	6,  // 33: api.TradeService.UpdateExtendInfo:input_type -> api.UpdateExtendInfoRequest
	8,  // 34: api.TradeService.UpdateTradeOrderStatus:input_type -> api.UpdateTradeOrderStatusRequest
	10, // 35: api.TradeService.UpdateDeliveryInfo:input_type -> api.UpdateDeliveryInfoRequest
	12, // 36: api.TradeService.AddSubOrder:input_type -> api.AddSubOrderRequest
	1,  // 37: api.TradeService.QueryTradeOrder:output_type -> api.QueryTradeOrderResponse
	3,  // 38: api.TradeService.TradeCreate:output_type -> api.TradeCreateResponse
	5,  // 39: api.TradeService.MergeTrade:output_type -> api.MergeTradeResponse
	7,  // 40: api.TradeService.UpdateExtendInfo:output_type -> api.UpdateExtendInfoResponse
	9,  // 41: api.TradeService.UpdateTradeOrderStatus:output_type -> api.UpdateTradeOrderStatusResponse
	11, // 42: api.TradeService.UpdateDeliveryInfo:output_type -> api.UpdateDeliveryInfoResponse
	13, // 43: api.TradeService.AddSubOrder:output_type -> api.AddSubOrderResponse
	37, // [37:44] is the sub-list for method output_type
	30, // [30:37] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_trade_proto_init() }
func file_trade_proto_init() {
	if File_trade_proto != nil {
		return
	}
	file_base_proto_init()
	file_trade_entities_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_trade_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTradeOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTradeOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TradeCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeTradeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MergeTradeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateExtendInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateExtendInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTradeOrderStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTradeOrderStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeliveryInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeliveryInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSubOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trade_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddSubOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trade_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trade_proto_goTypes,
		DependencyIndexes: file_trade_proto_depIdxs,
		MessageInfos:      file_trade_proto_msgTypes,
	}.Build()
	File_trade_proto = out.File
	file_trade_proto_rawDesc = nil
	file_trade_proto_goTypes = nil
	file_trade_proto_depIdxs = nil
}
