// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: svapi/video.proto

package svapi

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 预注册上传视频请求消息类型
type PreSign4UploadVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// md5 hash
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// 文件类型，默认mp4
	FileType string `protobuf:"bytes,2,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	// 文件大小，单位byte
	// @gotags: json:"size,omitempty,string"
	Size int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty,string"`
	// 文件名
	Filename string `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *PreSign4UploadVideoRequest) Reset() {
	*x = PreSign4UploadVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svapi_video_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreSign4UploadVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreSign4UploadVideoRequest) ProtoMessage() {}

func (x *PreSign4UploadVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svapi_video_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreSign4UploadVideoRequest.ProtoReflect.Descriptor instead.
func (*PreSign4UploadVideoRequest) Descriptor() ([]byte, []int) {
	return file_svapi_video_proto_rawDescGZIP(), []int{0}
}

func (x *PreSign4UploadVideoRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *PreSign4UploadVideoRequest) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *PreSign4UploadVideoRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PreSign4UploadVideoRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

// 预注册上传视频响应消息类型
type PreSign4UploadVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// minio上传地址
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// 文件id
	// @gotags: json:"file_id,omitempty,string"
	FileId int64 `protobuf:"varint,2,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty,string"`
}

func (x *PreSign4UploadVideoResponse) Reset() {
	*x = PreSign4UploadVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svapi_video_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreSign4UploadVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreSign4UploadVideoResponse) ProtoMessage() {}

func (x *PreSign4UploadVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svapi_video_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreSign4UploadVideoResponse.ProtoReflect.Descriptor instead.
func (*PreSign4UploadVideoResponse) Descriptor() ([]byte, []int) {
	return file_svapi_video_proto_rawDescGZIP(), []int{1}
}

func (x *PreSign4UploadVideoResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PreSign4UploadVideoResponse) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

// 通用小文件单次上传请求消息类型
type PreSign4UploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// md5 hash
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// 文件类型，默认mp4
	FileType string `protobuf:"bytes,2,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`
	// 文件大小，单位byte
	// @gotags: json:"size,omitempty,string"
	Size int64 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty,string"`
	// 文件名
	Filename string `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *PreSign4UploadRequest) Reset() {
	*x = PreSign4UploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svapi_video_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreSign4UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreSign4UploadRequest) ProtoMessage() {}

func (x *PreSign4UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svapi_video_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreSign4UploadRequest.ProtoReflect.Descriptor instead.
func (*PreSign4UploadRequest) Descriptor() ([]byte, []int) {
	return file_svapi_video_proto_rawDescGZIP(), []int{2}
}

func (x *PreSign4UploadRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *PreSign4UploadRequest) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *PreSign4UploadRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PreSign4UploadRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

// 通用小文件单次上传响应消息类型
type PreSign4UploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// minio上传地址
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// 文件id
	// @gotags: json:"file_id,omitempty,string"
	FileId int64 `protobuf:"varint,2,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty,string"`
}

func (x *PreSign4UploadResponse) Reset() {
	*x = PreSign4UploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svapi_video_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreSign4UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreSign4UploadResponse) ProtoMessage() {}

func (x *PreSign4UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svapi_video_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreSign4UploadResponse.ProtoReflect.Descriptor instead.
func (*PreSign4UploadResponse) Descriptor() ([]byte, []int) {
	return file_svapi_video_proto_rawDescGZIP(), []int{3}
}

func (x *PreSign4UploadResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PreSign4UploadResponse) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

// 确认视频上传完成请求消息类型
type ReportVideoFinishUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文件id
	// @gotags: json:"file_id,omitempty,string"
	FileId int64 `protobuf:"varint,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty,string"`
	// 视频标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	// 视频封面地址
	CoverUrl string `protobuf:"bytes,4,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`
	// 视频描述
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// 视频地址
	VideoUrl string `protobuf:"bytes,6,opt,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"`
}

func (x *ReportVideoFinishUploadRequest) Reset() {
	*x = ReportVideoFinishUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svapi_video_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportVideoFinishUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportVideoFinishUploadRequest) ProtoMessage() {}

func (x *ReportVideoFinishUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svapi_video_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportVideoFinishUploadRequest.ProtoReflect.Descriptor instead.
func (*ReportVideoFinishUploadRequest) Descriptor() ([]byte, []int) {
	return file_svapi_video_proto_rawDescGZIP(), []int{4}
}

func (x *ReportVideoFinishUploadRequest) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *ReportVideoFinishUploadRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReportVideoFinishUploadRequest) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *ReportVideoFinishUploadRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ReportVideoFinishUploadRequest) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

// 确认视频上传完成响应消息类型
type ReportVideoFinishUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视频id
	// @gotags: json:"video_id,omitempty,string"
	VideoId int64 `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty,string"`
}

func (x *ReportVideoFinishUploadResponse) Reset() {
	*x = ReportVideoFinishUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svapi_video_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportVideoFinishUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportVideoFinishUploadResponse) ProtoMessage() {}

func (x *ReportVideoFinishUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svapi_video_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportVideoFinishUploadResponse.ProtoReflect.Descriptor instead.
func (*ReportVideoFinishUploadResponse) Descriptor() ([]byte, []int) {
	return file_svapi_video_proto_rawDescGZIP(), []int{5}
}

func (x *ReportVideoFinishUploadResponse) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

// 通用确认上传完成请求消息类型
type ReportFinishUploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 文件id
	// @gotags: json:"file_id,omitempty,string"
	FileId int64 `protobuf:"varint,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty,string"`
}

func (x *ReportFinishUploadRequest) Reset() {
	*x = ReportFinishUploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svapi_video_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportFinishUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportFinishUploadRequest) ProtoMessage() {}

func (x *ReportFinishUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svapi_video_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportFinishUploadRequest.ProtoReflect.Descriptor instead.
func (*ReportFinishUploadRequest) Descriptor() ([]byte, []int) {
	return file_svapi_video_proto_rawDescGZIP(), []int{6}
}

func (x *ReportFinishUploadRequest) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

// 通用确认上传完成响应消息类型
type ReportFinishUploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// url
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *ReportFinishUploadResponse) Reset() {
	*x = ReportFinishUploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svapi_video_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportFinishUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportFinishUploadResponse) ProtoMessage() {}

func (x *ReportFinishUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svapi_video_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportFinishUploadResponse.ProtoReflect.Descriptor instead.
func (*ReportFinishUploadResponse) Descriptor() ([]byte, []int) {
	return file_svapi_video_proto_rawDescGZIP(), []int{7}
}

func (x *ReportFinishUploadResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 刷视频请求消息类型
type FeedShortVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"latest_time,omitempty,string"
	LatestTime int64 `protobuf:"varint,1,opt,name=latest_time,json=latestTime,proto3" json:"latest_time,omitempty,string"` // 可选参数，限制返回视频的最新投稿时间戳，精确到秒，不填表示当前时间
	// @gotags: json:"user_id,omitempty,string"
	UserId int64 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty,string"`
	// @gotags: json:"feed_num,omitempty,string"
	FeedNum int64 `protobuf:"varint,3,opt,name=feed_num,json=feedNum,proto3" json:"feed_num,omitempty,string"` // 返回视频的数量
}

func (x *FeedShortVideoRequest) Reset() {
	*x = FeedShortVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svapi_video_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedShortVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedShortVideoRequest) ProtoMessage() {}

func (x *FeedShortVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svapi_video_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedShortVideoRequest.ProtoReflect.Descriptor instead.
func (*FeedShortVideoRequest) Descriptor() ([]byte, []int) {
	return file_svapi_video_proto_rawDescGZIP(), []int{8}
}

func (x *FeedShortVideoRequest) GetLatestTime() int64 {
	if x != nil {
		return x.LatestTime
	}
	return 0
}

func (x *FeedShortVideoRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FeedShortVideoRequest) GetFeedNum() int64 {
	if x != nil {
		return x.FeedNum
	}
	return 0
}

// 刷视频响应消息类型
type FeedShortVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Meta   *Metadata `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Videos []*Video  `protobuf:"bytes,2,rep,name=videos,proto3" json:"videos,omitempty"`
	// @gotags: json:"next_time,omitempty,string"
	NextTime int64 `protobuf:"varint,3,opt,name=next_time,json=nextTime,proto3" json:"next_time,omitempty,string"` // 本次返回的视频中，发布最早的时间，作为下次请求时的latest_time
}

func (x *FeedShortVideoResponse) Reset() {
	*x = FeedShortVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svapi_video_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FeedShortVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedShortVideoResponse) ProtoMessage() {}

func (x *FeedShortVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svapi_video_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedShortVideoResponse.ProtoReflect.Descriptor instead.
func (*FeedShortVideoResponse) Descriptor() ([]byte, []int) {
	return file_svapi_video_proto_rawDescGZIP(), []int{9}
}

func (x *FeedShortVideoResponse) GetMeta() *Metadata {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *FeedShortVideoResponse) GetVideos() []*Video {
	if x != nil {
		return x.Videos
	}
	return nil
}

func (x *FeedShortVideoResponse) GetNextTime() int64 {
	if x != nil {
		return x.NextTime
	}
	return 0
}

// 获取视频信息请求消息类型
type GetVideoByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"video_id,omitempty,string"
	VideoId int64 `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty,string"`
}

func (x *GetVideoByIdRequest) Reset() {
	*x = GetVideoByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svapi_video_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoByIdRequest) ProtoMessage() {}

func (x *GetVideoByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svapi_video_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoByIdRequest.ProtoReflect.Descriptor instead.
func (*GetVideoByIdRequest) Descriptor() ([]byte, []int) {
	return file_svapi_video_proto_rawDescGZIP(), []int{10}
}

func (x *GetVideoByIdRequest) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

// 获取视频信息响应消息类型
type GetVideoByIdResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Video *Video `protobuf:"bytes,2,opt,name=video,proto3" json:"video,omitempty"`
}

func (x *GetVideoByIdResponse) Reset() {
	*x = GetVideoByIdResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svapi_video_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoByIdResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoByIdResponse) ProtoMessage() {}

func (x *GetVideoByIdResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svapi_video_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoByIdResponse.ProtoReflect.Descriptor instead.
func (*GetVideoByIdResponse) Descriptor() ([]byte, []int) {
	return file_svapi_video_proto_rawDescGZIP(), []int{11}
}

func (x *GetVideoByIdResponse) GetVideo() *Video {
	if x != nil {
		return x.Video
	}
	return nil
}

// 获取当前用户的发布视频列表请求消息类型
type ListPublishedVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @gotags: json:"user_id,omitempty,string"
	UserId     int64              `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty,string"`
	Pagination *PaginationRequest `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListPublishedVideoRequest) Reset() {
	*x = ListPublishedVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svapi_video_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPublishedVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPublishedVideoRequest) ProtoMessage() {}

func (x *ListPublishedVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_svapi_video_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPublishedVideoRequest.ProtoReflect.Descriptor instead.
func (*ListPublishedVideoRequest) Descriptor() ([]byte, []int) {
	return file_svapi_video_proto_rawDescGZIP(), []int{12}
}

func (x *ListPublishedVideoRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListPublishedVideoRequest) GetPagination() *PaginationRequest {
	if x != nil {
		return x.Pagination
	}
	return nil
}

// 获取当前用户的发布视频列表响应消息类型
type ListPublishedVideoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoList  []*Video            `protobuf:"bytes,2,rep,name=video_list,json=videoList,proto3" json:"video_list,omitempty"`
	Pagination *PaginationResponse `protobuf:"bytes,3,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ListPublishedVideoResponse) Reset() {
	*x = ListPublishedVideoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_svapi_video_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPublishedVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPublishedVideoResponse) ProtoMessage() {}

func (x *ListPublishedVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_svapi_video_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPublishedVideoResponse.ProtoReflect.Descriptor instead.
func (*ListPublishedVideoResponse) Descriptor() ([]byte, []int) {
	return file_svapi_video_proto_rawDescGZIP(), []int{13}
}

func (x *ListPublishedVideoResponse) GetVideoList() []*Video {
	if x != nil {
		return x.VideoList
	}
	return nil
}

func (x *ListPublishedVideoResponse) GetPagination() *PaginationResponse {
	if x != nil {
		return x.Pagination
	}
	return nil
}

var File_svapi_video_proto protoreflect.FileDescriptor

var file_svapi_video_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x76, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73, 0x76, 0x61, 0x70, 0x69, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x73, 0x76, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7d, 0x0a, 0x1a, 0x50, 0x72, 0x65, 0x53, 0x69,
	0x67, 0x6e, 0x34, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69,
	0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x1b, 0x50, 0x72, 0x65, 0x53, 0x69, 0x67,
	0x6e, 0x34, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x22, 0x78, 0x0a, 0x15, 0x50, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x34, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x43, 0x0a, 0x16, 0x50, 0x72,
	0x65, 0x53, 0x69, 0x67, 0x6e, 0x34, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x22,
	0xab, 0x01, 0x0a, 0x1e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46,
	0x69, 0x6e, 0x69, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x22, 0x3c, 0x0a,
	0x1f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x19, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0x2e, 0x0a, 0x1a, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73,
	0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x22, 0x7e, 0x0a, 0x15, 0x46, 0x65, 0x65, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xba, 0x48,
	0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x08, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x07, 0xba, 0x48, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x07, 0x66, 0x65, 0x65, 0x64, 0x4e, 0x75,
	0x6d, 0x22, 0x80, 0x01, 0x0a, 0x16, 0x46, 0x65, 0x65, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x04,
	0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x76, 0x61,
	0x70, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65, 0x74,
	0x61, 0x12, 0x24, 0x0a, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52,
	0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x08, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xba,
	0x48, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x22,
	0x3a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x22, 0x77, 0x0a, 0x19, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xba, 0x48, 0x04, 0x22, 0x02,
	0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x73, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x84, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x76, 0x61, 0x70, 0x69, 0x2e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x32, 0xc3, 0x06, 0x0a, 0x1a,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x72, 0x65, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x76, 0x0a, 0x13, 0x50, 0x72,
	0x65, 0x53, 0x69, 0x67, 0x6e, 0x34, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x12, 0x21, 0x2e, 0x73, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x65, 0x53, 0x69, 0x67,
	0x6e, 0x34, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x34, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12,
	0x22, 0x0d, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x3a,
	0x01, 0x2a, 0x12, 0x6c, 0x0a, 0x13, 0x50, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x34, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x73, 0x76, 0x61, 0x70,
	0x69, 0x2e, 0x50, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x34, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x76, 0x61, 0x70, 0x69, 0x2e,
	0x50, 0x72, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x34, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d,
	0x2f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x3a, 0x01, 0x2a,
	0x12, 0x7c, 0x0a, 0x12, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x20, 0x2e, 0x73, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x76, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x66, 0x69, 0x6c, 0x65, 0x2f, 0x7b, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x3a, 0x01, 0x2a, 0x12, 0x82,
	0x01, 0x0a, 0x17, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x25, 0x2e, 0x73, 0x76, 0x61,
	0x70, 0x69, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x73, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x12, 0x22, 0x0d, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x3a, 0x01, 0x2a, 0x12, 0x65, 0x0a, 0x0e, 0x46, 0x65, 0x65, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x1c, 0x2e, 0x73, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65,
	0x65, 0x64, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x65, 0x65, 0x64,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x62, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1a, 0x2e, 0x73, 0x76, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2f, 0x7b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x71,
	0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x12, 0x20, 0x2e, 0x73, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x76, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x10, 0x22, 0x0b, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01,
	0x2a, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x7a, 0x65, 0x6e, 0x69, 0x74, 0x68, 0x2f, 0x44, 0x6f, 0x75, 0x54,
	0x6f, 0x6b, 0x2f, 0x2e, 0x2e, 0x2e, 0x3b, 0x73, 0x76, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_svapi_video_proto_rawDescOnce sync.Once
	file_svapi_video_proto_rawDescData = file_svapi_video_proto_rawDesc
)

func file_svapi_video_proto_rawDescGZIP() []byte {
	file_svapi_video_proto_rawDescOnce.Do(func() {
		file_svapi_video_proto_rawDescData = protoimpl.X.CompressGZIP(file_svapi_video_proto_rawDescData)
	})
	return file_svapi_video_proto_rawDescData
}

var file_svapi_video_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_svapi_video_proto_goTypes = []interface{}{
	(*PreSign4UploadVideoRequest)(nil),      // 0: svapi.PreSign4UploadVideoRequest
	(*PreSign4UploadVideoResponse)(nil),     // 1: svapi.PreSign4UploadVideoResponse
	(*PreSign4UploadRequest)(nil),           // 2: svapi.PreSign4UploadRequest
	(*PreSign4UploadResponse)(nil),          // 3: svapi.PreSign4UploadResponse
	(*ReportVideoFinishUploadRequest)(nil),  // 4: svapi.ReportVideoFinishUploadRequest
	(*ReportVideoFinishUploadResponse)(nil), // 5: svapi.ReportVideoFinishUploadResponse
	(*ReportFinishUploadRequest)(nil),       // 6: svapi.ReportFinishUploadRequest
	(*ReportFinishUploadResponse)(nil),      // 7: svapi.ReportFinishUploadResponse
	(*FeedShortVideoRequest)(nil),           // 8: svapi.FeedShortVideoRequest
	(*FeedShortVideoResponse)(nil),          // 9: svapi.FeedShortVideoResponse
	(*GetVideoByIdRequest)(nil),             // 10: svapi.GetVideoByIdRequest
	(*GetVideoByIdResponse)(nil),            // 11: svapi.GetVideoByIdResponse
	(*ListPublishedVideoRequest)(nil),       // 12: svapi.ListPublishedVideoRequest
	(*ListPublishedVideoResponse)(nil),      // 13: svapi.ListPublishedVideoResponse
	(*Metadata)(nil),                        // 14: svapi.Metadata
	(*Video)(nil),                           // 15: svapi.Video
	(*PaginationRequest)(nil),               // 16: svapi.PaginationRequest
	(*PaginationResponse)(nil),              // 17: svapi.PaginationResponse
}
var file_svapi_video_proto_depIdxs = []int32{
	14, // 0: svapi.FeedShortVideoResponse.meta:type_name -> svapi.Metadata
	15, // 1: svapi.FeedShortVideoResponse.videos:type_name -> svapi.Video
	15, // 2: svapi.GetVideoByIdResponse.video:type_name -> svapi.Video
	16, // 3: svapi.ListPublishedVideoRequest.pagination:type_name -> svapi.PaginationRequest
	15, // 4: svapi.ListPublishedVideoResponse.video_list:type_name -> svapi.Video
	17, // 5: svapi.ListPublishedVideoResponse.pagination:type_name -> svapi.PaginationResponse
	0,  // 6: svapi.ShortVideoCoreVideoService.PreSign4UploadVideo:input_type -> svapi.PreSign4UploadVideoRequest
	2,  // 7: svapi.ShortVideoCoreVideoService.PreSign4UploadCover:input_type -> svapi.PreSign4UploadRequest
	6,  // 8: svapi.ShortVideoCoreVideoService.ReportFinishUpload:input_type -> svapi.ReportFinishUploadRequest
	4,  // 9: svapi.ShortVideoCoreVideoService.ReportVideoFinishUpload:input_type -> svapi.ReportVideoFinishUploadRequest
	8,  // 10: svapi.ShortVideoCoreVideoService.FeedShortVideo:input_type -> svapi.FeedShortVideoRequest
	10, // 11: svapi.ShortVideoCoreVideoService.GetVideoById:input_type -> svapi.GetVideoByIdRequest
	12, // 12: svapi.ShortVideoCoreVideoService.ListPublishedVideo:input_type -> svapi.ListPublishedVideoRequest
	1,  // 13: svapi.ShortVideoCoreVideoService.PreSign4UploadVideo:output_type -> svapi.PreSign4UploadVideoResponse
	3,  // 14: svapi.ShortVideoCoreVideoService.PreSign4UploadCover:output_type -> svapi.PreSign4UploadResponse
	7,  // 15: svapi.ShortVideoCoreVideoService.ReportFinishUpload:output_type -> svapi.ReportFinishUploadResponse
	5,  // 16: svapi.ShortVideoCoreVideoService.ReportVideoFinishUpload:output_type -> svapi.ReportVideoFinishUploadResponse
	9,  // 17: svapi.ShortVideoCoreVideoService.FeedShortVideo:output_type -> svapi.FeedShortVideoResponse
	11, // 18: svapi.ShortVideoCoreVideoService.GetVideoById:output_type -> svapi.GetVideoByIdResponse
	13, // 19: svapi.ShortVideoCoreVideoService.ListPublishedVideo:output_type -> svapi.ListPublishedVideoResponse
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_svapi_video_proto_init() }
func file_svapi_video_proto_init() {
	if File_svapi_video_proto != nil {
		return
	}
	file_svapi_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_svapi_video_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreSign4UploadVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svapi_video_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreSign4UploadVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svapi_video_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreSign4UploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svapi_video_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreSign4UploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svapi_video_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportVideoFinishUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svapi_video_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportVideoFinishUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svapi_video_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportFinishUploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svapi_video_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportFinishUploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svapi_video_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedShortVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svapi_video_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FeedShortVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svapi_video_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svapi_video_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoByIdResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svapi_video_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPublishedVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_svapi_video_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPublishedVideoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_svapi_video_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_svapi_video_proto_goTypes,
		DependencyIndexes: file_svapi_video_proto_depIdxs,
		MessageInfos:      file_svapi_video_proto_msgTypes,
	}.Build()
	File_svapi_video_proto = out.File
	file_svapi_video_proto_rawDesc = nil
	file_svapi_video_proto_goTypes = nil
	file_svapi_video_proto_depIdxs = nil
}
